webpackHotUpdate(0,{

/***/ 170:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(3), RootInstanceProvider = __webpack_require__(11), ReactMount = __webpack_require__(13), React = __webpack_require__(67); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jQuery = window.jQuery = window.$ = __webpack_require__(171);\n\n__webpack_require__(173);\n\n// Yii 2\nvar pathYii = '../backend/vendor/yiisoft/yii2/assets/';\n\n__webpack_require__(218);\n//require(pathYii + 'yii.validation.js');\n//require(pathYii + 'yii.gridView.js');\n//require(pathYii + 'yii.activeForm.js');\n//require(pathYii + 'yii.captcha.js');\n\nexports['default'] = jQuery;\nmodule.exports = exports['default'];\n\n/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(174); if (makeExportsHot(module, __webpack_require__(67))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error(\"Cannot not apply hot update to \" + \"jquery.js\" + \": \" + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2hpbXMvanF1ZXJ5LmpzP2E2NTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxtQkFBTyxDQUFDLEdBQXdCLENBQUMsQ0FBQzs7QUFFNUUsbUJBQU8sQ0FBQyxHQUFvRCxDQUFDLENBQUM7OztBQUc5RCxJQUFNLE9BQU8sR0FBRyx3Q0FBd0MsQ0FBQzs7QUFFekQsbUJBQU8sQ0FBQyxHQUFvRCxDQUFDLENBQUM7Ozs7OztxQkFNL0MsTUFBTSIsImZpbGUiOiIxNzAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqUXVlcnkgPSB3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSByZXF1aXJlKCdqcXVlcnkvZGlzdC9qcXVlcnkubWluJyk7XHJcblxyXG5yZXF1aXJlKCdib290c3RyYXAtc2Fzcy9hc3NldHMvamF2YXNjcmlwdHMvYm9vdHN0cmFwLm1pbi5qcycpO1xyXG5cclxuLy8gWWlpIDJcclxuY29uc3QgcGF0aFlpaSA9ICcuLi9iYWNrZW5kL3ZlbmRvci95aWlzb2Z0L3lpaTIvYXNzZXRzLyc7XHJcblxyXG5yZXF1aXJlKCcuLi8uLi8uLi9iYWNrZW5kL3ZlbmRvci95aWlzb2Z0L3lpaTIvYXNzZXRzL3lpaS5qcycpO1xyXG4vL3JlcXVpcmUocGF0aFlpaSArICd5aWkudmFsaWRhdGlvbi5qcycpO1xyXG4vL3JlcXVpcmUocGF0aFlpaSArICd5aWkuZ3JpZFZpZXcuanMnKTtcclxuLy9yZXF1aXJlKHBhdGhZaWkgKyAneWlpLmFjdGl2ZUZvcm0uanMnKTtcclxuLy9yZXF1aXJlKHBhdGhZaWkgKyAneWlpLmNhcHRjaGEuanMnKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGpRdWVyeTtcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zaGltcy9qcXVlcnkuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9");

/***/ },

/***/ 218:
/***/ function(module, exports) {

	eval("/**\n * Yii JavaScript module.\n *\n * @link http://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http://www.yiiframework.com/license/\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\n\n/**\n * yii is the root module for all Yii JavaScript modules.\n * It implements a mechanism of organizing JavaScript code in modules through the function \"yii.initModule()\".\n *\n * Each module should be named as \"x.y.z\", where \"x\" stands for the root module (for the Yii core code, this is \"yii\").\n *\n * A module may be structured as follows:\n *\n * ```javascript\n * yii.sample = (function($) {\n *     var pub = {\n *         // whether this module is currently active. If false, init() will not be called for this module\n *         // it will also not be called for all its child modules. If this property is undefined, it means true.\n *         isActive: true,\n *         init: function() {\n *             // ... module initialization code go here ...\n *         },\n *\n *         // ... other public functions and properties go here ...\n *     };\n *\n *     // ... private functions and properties go here ...\n *\n *     return pub;\n * })(jQuery);\n * ```\n *\n * Using this structure, you can define public and private functions/properties for a module.\n * Private functions/properties are only visible within the module, while public functions/properties\n * may be accessed outside of the module. For example, you can access \"yii.sample.isActive\".\n *\n * You must call \"yii.initModule()\" once for the root module of all your modules.\n */\nyii = (function ($) {\n    var pub = {\n        /**\n         * List of JS or CSS URLs that can be loaded multiple times via AJAX requests. Each script can be represented\n         * as either an absolute URL or a relative one.\n         */\n        reloadableScripts: [],\n        /**\n         * The selector for clickable elements that need to support confirmation and form submission.\n         */\n        clickableSelector: 'a, button, input[type=\"submit\"], input[type=\"button\"], input[type=\"reset\"], input[type=\"image\"]',\n        /**\n         * The selector for changeable elements that need to support confirmation and form submission.\n         */\n        changeableSelector: 'select, input, textarea',\n\n        /**\n         * @return string|undefined the CSRF parameter name. Undefined is returned if CSRF validation is not enabled.\n         */\n        getCsrfParam: function () {\n            return $('meta[name=csrf-param]').attr('content');\n        },\n\n        /**\n         * @return string|undefined the CSRF token. Undefined is returned if CSRF validation is not enabled.\n         */\n        getCsrfToken: function () {\n            return $('meta[name=csrf-token]').attr('content');\n        },\n\n        /**\n         * Sets the CSRF token in the meta elements.\n         * This method is provided so that you can update the CSRF token with the latest one you obtain from the server.\n         * @param name the CSRF token name\n         * @param value the CSRF token value\n         */\n        setCsrfToken: function (name, value) {\n            $('meta[name=csrf-param]').attr('content', name);\n            $('meta[name=csrf-token]').attr('content', value);\n        },\n\n        /**\n         * Updates all form CSRF input fields with the latest CSRF token.\n         * This method is provided to avoid cached forms containing outdated CSRF tokens.\n         */\n        refreshCsrfToken: function () {\n            var token = pub.getCsrfToken();\n            if (token) {\n                $('form input[name=\"' + pub.getCsrfParam() + '\"]').val(token);\n            }\n        },\n\n        /**\n         * Displays a confirmation dialog.\n         * The default implementation simply displays a js confirmation dialog.\n         * You may override this by setting `yii.confirm`.\n         * @param message the confirmation message.\n         * @param ok a callback to be called when the user confirms the message\n         * @param cancel a callback to be called when the user cancels the confirmation\n         */\n        confirm: function (message, ok, cancel) {\n            if (confirm(message)) {\n                !ok || ok();\n            } else {\n                !cancel || cancel();\n            }\n        },\n\n        /**\n         * Handles the action triggered by user.\n         * This method recognizes the `data-method` attribute of the element. If the attribute exists,\n         * the method will submit the form containing this element. If there is no containing form, a form\n         * will be created and submitted using the method given by this attribute value (e.g. \"post\", \"put\").\n         * For hyperlinks, the form action will take the value of the \"href\" attribute of the link.\n         * For other elements, either the containing form action or the current page URL will be used\n         * as the form action URL.\n         *\n         * If the `data-method` attribute is not defined, the `href` attribute (if any) of the element\n         * will be assigned to `window.location`.\n         *\n         * Starting from version 2.0.3, the `data-params` attribute is also recognized when you specify\n         * `data-method`. The value of `data-params` should be a JSON representation of the data (name-value pairs)\n         * that should be submitted as hidden inputs. For example, you may use the following code to generate\n         * such a link:\n         *\n         * ```php\n         * use yii\\helpers\\Html;\n         * use yii\\helpers\\Json;\n         *\n         * echo Html::a('submit', ['site/foobar'], [\n         *     'data' => [\n         *         'method' => 'post',\n         *         'params' => [\n         *             'name1' => 'value1',\n         *             'name2' => 'value2',\n         *         ],\n         *     ],\n         * ];\n         * ```\n         *\n         * @param $e the jQuery representation of the element\n         */\n        handleAction: function ($e, event) {\n            var method = $e.data('method'),\n                $form = $e.closest('form'),\n                action = $e.attr('href'),\n                params = $e.data('params'),\n                pjax = $e.data('pjax'),\n                pjaxPushState = !!$e.data('pjax-push-state'),\n                pjaxReplaceState = !!$e.data('pjax-replace-state'),\n                pjaxTimeout = $e.data('pjax-timeout'),\n                pjaxScrollTo = $e.data('pjax-scrollto'),\n                pjaxPushRedirect = $e.data('pjax-push-redirect'),\n                pjaxReplaceRedirect = $e.data('pjax-replace-redirect'),\n                pjaxSkipOuterContainers = $e.data('pjax-skip-outer-containers'),\n                pjaxContainer,\n                pjaxOptions = {};\n\n            if (pjax !== undefined && $.support.pjax) {\n                if ($e.data('pjax-container')) {\n                    pjaxContainer = $e.data('pjax-container');\n                } else {\n                    pjaxContainer = $e.closest('[data-pjax-container=\"\"]');\n                }\n                // default to body if pjax container not found\n                if (!pjaxContainer.length) {\n                    pjaxContainer = $('body');\n                }\n                pjaxOptions = {\n                    container: pjaxContainer,\n                    push: pjaxPushState,\n                    replace: pjaxReplaceState,\n                    scrollTo: pjaxScrollTo,\n                    pushRedirect: pjaxPushRedirect,\n                    replaceRedirect: pjaxReplaceRedirect,\n                    pjaxSkipOuterContainers: pjaxSkipOuterContainers,\n                    timeout: pjaxTimeout,\n                    originalEvent: event,\n                    originalTarget: $e\n                }\n            }\n\n            if (method === undefined) {\n                if (action && action != '#') {\n                    if (pjax !== undefined && $.support.pjax) {\n                        $.pjax.click(event, pjaxOptions);\n                    } else {\n                        window.location = action;\n                    }\n                } else if ($e.is(':submit') && $form.length) {\n                    if (pjax !== undefined && $.support.pjax) {\n                        $form.on('submit',function(e){\n                            $.pjax.submit(e, pjaxOptions);\n                        })\n                    }\n                    $form.trigger('submit');\n                }\n                return;\n            }\n\n            var newForm = !$form.length;\n            if (newForm) {\n                if (!action || !action.match(/(^\\/|:\\/\\/)/)) {\n                    action = window.location.href;\n                }\n                $form = $('<form/>', {method: method, action: action});\n                var target = $e.attr('target');\n                if (target) {\n                    $form.attr('target', target);\n                }\n                if (!method.match(/(get|post)/i)) {\n                    $form.append($('<input/>', {name: '_method', value: method, type: 'hidden'}));\n                    method = 'POST';\n                }\n                if (!method.match(/(get|head|options)/i)) {\n                    var csrfParam = pub.getCsrfParam();\n                    if (csrfParam) {\n                        $form.append($('<input/>', {name: csrfParam, value: pub.getCsrfToken(), type: 'hidden'}));\n                    }\n                }\n                $form.hide().appendTo('body');\n            }\n\n            var activeFormData = $form.data('yiiActiveForm');\n            if (activeFormData) {\n                // remember who triggers the form submission. This is used by yii.activeForm.js\n                activeFormData.submitObject = $e;\n            }\n\n            // temporarily add hidden inputs according to data-params\n            if (params && $.isPlainObject(params)) {\n                $.each(params, function (idx, obj) {\n                    $form.append($('<input/>').attr({name: idx, value: obj, type: 'hidden'}));\n                });\n            }\n\n            var oldMethod = $form.attr('method');\n            $form.attr('method', method);\n            var oldAction = null;\n            if (action && action != '#') {\n                oldAction = $form.attr('action');\n                $form.attr('action', action);\n            }\n            if (pjax !== undefined && $.support.pjax) {\n                $form.on('submit',function(e){\n                    $.pjax.submit(e, pjaxOptions);\n                })\n            }\n            $form.trigger('submit');\n            $.when($form.data('yiiSubmitFinalizePromise')).then(\n                function () {\n                    if (oldAction != null) {\n                        $form.attr('action', oldAction);\n                    }\n                    $form.attr('method', oldMethod);\n\n                    // remove the temporarily added hidden inputs\n                    if (params && $.isPlainObject(params)) {\n                        $.each(params, function (idx, obj) {\n                            $('input[name=\"' + idx + '\"]', $form).remove();\n                        });\n                    }\n\n                    if (newForm) {\n                        $form.remove();\n                    }\n                }\n            );\n        },\n\n        getQueryParams: function (url) {\n            var pos = url.indexOf('?');\n            if (pos < 0) {\n                return {};\n            }\n\n            var pairs = url.substring(pos + 1).split('&'),\n                params = {},\n                pair,\n                i;\n\n            for (i = 0; i < pairs.length; i++) {\n                pair = pairs[i].split('=');\n                var name = decodeURIComponent(pair[0]);\n                var value = decodeURIComponent(pair[1]);\n                if (name.length) {\n                    if (params[name] !== undefined) {\n                        if (!$.isArray(params[name])) {\n                            params[name] = [params[name]];\n                        }\n                        params[name].push(value || '');\n                    } else {\n                        params[name] = value || '';\n                    }\n                }\n            }\n            return params;\n        },\n\n        initModule: function (module) {\n            if (module.isActive === undefined || module.isActive) {\n                if ($.isFunction(module.init)) {\n                    module.init();\n                }\n                $.each(module, function () {\n                    if ($.isPlainObject(this)) {\n                        pub.initModule(this);\n                    }\n                });\n            }\n        },\n\n        init: function () {\n            initCsrfHandler();\n            initRedirectHandler();\n            initScriptFilter();\n            initDataMethods();\n        }\n    };\n\n    function initRedirectHandler() {\n        // handle AJAX redirection\n        $(document).ajaxComplete(function (event, xhr, settings) {\n            var url = xhr.getResponseHeader('X-Redirect');\n            if (url) {\n                window.location = url;\n            }\n        });\n    }\n\n    function initCsrfHandler() {\n        // automatically send CSRF token for all AJAX requests\n        $.ajaxPrefilter(function (options, originalOptions, xhr) {\n            if (!options.crossDomain && pub.getCsrfParam()) {\n                xhr.setRequestHeader('X-CSRF-Token', pub.getCsrfToken());\n            }\n        });\n        pub.refreshCsrfToken();\n    }\n\n    function initDataMethods() {\n        var handler = function (event) {\n            var $this = $(this),\n                method = $this.data('method'),\n                message = $this.data('confirm');\n\n            if (method === undefined && message === undefined) {\n                return true;\n            }\n\n            if (message !== undefined) {\n                $.proxy(pub.confirm, this)(message, function () {\n                    pub.handleAction($this, event);\n                });\n            } else {\n                pub.handleAction($this, event);\n            }\n            event.stopImmediatePropagation();\n            return false;\n        };\n\n        // handle data-confirm and data-method for clickable and changeable elements\n        $(document).on('click.yii', pub.clickableSelector, handler)\n            .on('change.yii', pub.changeableSelector, handler);\n    }\n\n    function initScriptFilter() {\n        var hostInfo = location.protocol + '//' + location.host;\n\n        var loadedScripts = $('script[src]').map(function () {\n            return this.src.charAt(0) === '/' ? hostInfo + this.src : this.src;\n        }).toArray();\n\n        $.ajaxPrefilter('script', function (options, originalOptions, xhr) {\n            if (options.dataType == 'jsonp') {\n                return;\n            }\n\n            var url = options.url.charAt(0) === '/' ? hostInfo + options.url : options.url;\n            if ($.inArray(url, loadedScripts) === -1) {\n                loadedScripts.push(url);\n            } else {\n                var isReloadable = $.inArray(url, $.map(pub.reloadableScripts, function (script) {\n                        return script.charAt(0) === '/' ? hostInfo + script : script;\n                    })) !== -1;\n                if (!isReloadable) {\n                    xhr.abort();\n                }\n            }\n        });\n\n        $(document).ajaxComplete(function (event, xhr, settings) {\n            var styleSheets = [];\n            $('link[rel=stylesheet]').each(function () {\n                if ($.inArray(this.href, pub.reloadableScripts) !== -1) {\n                    return;\n                }\n                if ($.inArray(this.href, styleSheets) == -1) {\n                    styleSheets.push(this.href)\n                } else {\n                    $(this).remove();\n                }\n            })\n        });\n    }\n\n    return pub;\n})(jQuery);\n\njQuery(document).ready(function () {\n    yii.initModule(yii);\n});\n\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vYmFja2VuZC92ZW5kb3IveWlpc29mdC95aWkyL2Fzc2V0cy95aWkuanM/MjAwOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUzs7QUFFVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtCQUErQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELCtDQUErQztBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDJEQUEyRDtBQUMvRztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxzQ0FBc0M7QUFDM0YsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBOztBQUVBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7O0FBRUE7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6IjIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogWWlpIEphdmFTY3JpcHQgbW9kdWxlLlxuICpcbiAqIEBsaW5rIGh0dHA6Ly93d3cueWlpZnJhbWV3b3JrLmNvbS9cbiAqIEBjb3B5cmlnaHQgQ29weXJpZ2h0IChjKSAyMDA4IFlpaSBTb2Z0d2FyZSBMTENcbiAqIEBsaWNlbnNlIGh0dHA6Ly93d3cueWlpZnJhbWV3b3JrLmNvbS9saWNlbnNlL1xuICogQGF1dGhvciBRaWFuZyBYdWUgPHFpYW5nLnh1ZUBnbWFpbC5jb20+XG4gKiBAc2luY2UgMi4wXG4gKi9cblxuLyoqXG4gKiB5aWkgaXMgdGhlIHJvb3QgbW9kdWxlIGZvciBhbGwgWWlpIEphdmFTY3JpcHQgbW9kdWxlcy5cbiAqIEl0IGltcGxlbWVudHMgYSBtZWNoYW5pc20gb2Ygb3JnYW5pemluZyBKYXZhU2NyaXB0IGNvZGUgaW4gbW9kdWxlcyB0aHJvdWdoIHRoZSBmdW5jdGlvbiBcInlpaS5pbml0TW9kdWxlKClcIi5cbiAqXG4gKiBFYWNoIG1vZHVsZSBzaG91bGQgYmUgbmFtZWQgYXMgXCJ4LnkuelwiLCB3aGVyZSBcInhcIiBzdGFuZHMgZm9yIHRoZSByb290IG1vZHVsZSAoZm9yIHRoZSBZaWkgY29yZSBjb2RlLCB0aGlzIGlzIFwieWlpXCIpLlxuICpcbiAqIEEgbW9kdWxlIG1heSBiZSBzdHJ1Y3R1cmVkIGFzIGZvbGxvd3M6XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogeWlpLnNhbXBsZSA9IChmdW5jdGlvbigkKSB7XG4gKiAgICAgdmFyIHB1YiA9IHtcbiAqICAgICAgICAgLy8gd2hldGhlciB0aGlzIG1vZHVsZSBpcyBjdXJyZW50bHkgYWN0aXZlLiBJZiBmYWxzZSwgaW5pdCgpIHdpbGwgbm90IGJlIGNhbGxlZCBmb3IgdGhpcyBtb2R1bGVcbiAqICAgICAgICAgLy8gaXQgd2lsbCBhbHNvIG5vdCBiZSBjYWxsZWQgZm9yIGFsbCBpdHMgY2hpbGQgbW9kdWxlcy4gSWYgdGhpcyBwcm9wZXJ0eSBpcyB1bmRlZmluZWQsIGl0IG1lYW5zIHRydWUuXG4gKiAgICAgICAgIGlzQWN0aXZlOiB0cnVlLFxuICogICAgICAgICBpbml0OiBmdW5jdGlvbigpIHtcbiAqICAgICAgICAgICAgIC8vIC4uLiBtb2R1bGUgaW5pdGlhbGl6YXRpb24gY29kZSBnbyBoZXJlIC4uLlxuICogICAgICAgICB9LFxuICpcbiAqICAgICAgICAgLy8gLi4uIG90aGVyIHB1YmxpYyBmdW5jdGlvbnMgYW5kIHByb3BlcnRpZXMgZ28gaGVyZSAuLi5cbiAqICAgICB9O1xuICpcbiAqICAgICAvLyAuLi4gcHJpdmF0ZSBmdW5jdGlvbnMgYW5kIHByb3BlcnRpZXMgZ28gaGVyZSAuLi5cbiAqXG4gKiAgICAgcmV0dXJuIHB1YjtcbiAqIH0pKGpRdWVyeSk7XG4gKiBgYGBcbiAqXG4gKiBVc2luZyB0aGlzIHN0cnVjdHVyZSwgeW91IGNhbiBkZWZpbmUgcHVibGljIGFuZCBwcml2YXRlIGZ1bmN0aW9ucy9wcm9wZXJ0aWVzIGZvciBhIG1vZHVsZS5cbiAqIFByaXZhdGUgZnVuY3Rpb25zL3Byb3BlcnRpZXMgYXJlIG9ubHkgdmlzaWJsZSB3aXRoaW4gdGhlIG1vZHVsZSwgd2hpbGUgcHVibGljIGZ1bmN0aW9ucy9wcm9wZXJ0aWVzXG4gKiBtYXkgYmUgYWNjZXNzZWQgb3V0c2lkZSBvZiB0aGUgbW9kdWxlLiBGb3IgZXhhbXBsZSwgeW91IGNhbiBhY2Nlc3MgXCJ5aWkuc2FtcGxlLmlzQWN0aXZlXCIuXG4gKlxuICogWW91IG11c3QgY2FsbCBcInlpaS5pbml0TW9kdWxlKClcIiBvbmNlIGZvciB0aGUgcm9vdCBtb2R1bGUgb2YgYWxsIHlvdXIgbW9kdWxlcy5cbiAqL1xueWlpID0gKGZ1bmN0aW9uICgkKSB7XG4gICAgdmFyIHB1YiA9IHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIExpc3Qgb2YgSlMgb3IgQ1NTIFVSTHMgdGhhdCBjYW4gYmUgbG9hZGVkIG11bHRpcGxlIHRpbWVzIHZpYSBBSkFYIHJlcXVlc3RzLiBFYWNoIHNjcmlwdCBjYW4gYmUgcmVwcmVzZW50ZWRcbiAgICAgICAgICogYXMgZWl0aGVyIGFuIGFic29sdXRlIFVSTCBvciBhIHJlbGF0aXZlIG9uZS5cbiAgICAgICAgICovXG4gICAgICAgIHJlbG9hZGFibGVTY3JpcHRzOiBbXSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBzZWxlY3RvciBmb3IgY2xpY2thYmxlIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBzdXBwb3J0IGNvbmZpcm1hdGlvbiBhbmQgZm9ybSBzdWJtaXNzaW9uLlxuICAgICAgICAgKi9cbiAgICAgICAgY2xpY2thYmxlU2VsZWN0b3I6ICdhLCBidXR0b24sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSwgaW5wdXRbdHlwZT1cImltYWdlXCJdJyxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSBzZWxlY3RvciBmb3IgY2hhbmdlYWJsZSBlbGVtZW50cyB0aGF0IG5lZWQgdG8gc3VwcG9ydCBjb25maXJtYXRpb24gYW5kIGZvcm0gc3VibWlzc2lvbi5cbiAgICAgICAgICovXG4gICAgICAgIGNoYW5nZWFibGVTZWxlY3RvcjogJ3NlbGVjdCwgaW5wdXQsIHRleHRhcmVhJyxcblxuICAgICAgICAvKipcbiAgICAgICAgICogQHJldHVybiBzdHJpbmd8dW5kZWZpbmVkIHRoZSBDU1JGIHBhcmFtZXRlciBuYW1lLiBVbmRlZmluZWQgaXMgcmV0dXJuZWQgaWYgQ1NSRiB2YWxpZGF0aW9uIGlzIG5vdCBlbmFibGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgZ2V0Q3NyZlBhcmFtOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJCgnbWV0YVtuYW1lPWNzcmYtcGFyYW1dJykuYXR0cignY29udGVudCcpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAcmV0dXJuIHN0cmluZ3x1bmRlZmluZWQgdGhlIENTUkYgdG9rZW4uIFVuZGVmaW5lZCBpcyByZXR1cm5lZCBpZiBDU1JGIHZhbGlkYXRpb24gaXMgbm90IGVuYWJsZWQuXG4gICAgICAgICAqL1xuICAgICAgICBnZXRDc3JmVG9rZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAkKCdtZXRhW25hbWU9Y3NyZi10b2tlbl0nKS5hdHRyKCdjb250ZW50Jyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNldHMgdGhlIENTUkYgdG9rZW4gaW4gdGhlIG1ldGEgZWxlbWVudHMuXG4gICAgICAgICAqIFRoaXMgbWV0aG9kIGlzIHByb3ZpZGVkIHNvIHRoYXQgeW91IGNhbiB1cGRhdGUgdGhlIENTUkYgdG9rZW4gd2l0aCB0aGUgbGF0ZXN0IG9uZSB5b3Ugb2J0YWluIGZyb20gdGhlIHNlcnZlci5cbiAgICAgICAgICogQHBhcmFtIG5hbWUgdGhlIENTUkYgdG9rZW4gbmFtZVxuICAgICAgICAgKiBAcGFyYW0gdmFsdWUgdGhlIENTUkYgdG9rZW4gdmFsdWVcbiAgICAgICAgICovXG4gICAgICAgIHNldENzcmZUb2tlbjogZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgICAgICAkKCdtZXRhW25hbWU9Y3NyZi1wYXJhbV0nKS5hdHRyKCdjb250ZW50JywgbmFtZSk7XG4gICAgICAgICAgICAkKCdtZXRhW25hbWU9Y3NyZi10b2tlbl0nKS5hdHRyKCdjb250ZW50JywgdmFsdWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGRhdGVzIGFsbCBmb3JtIENTUkYgaW5wdXQgZmllbGRzIHdpdGggdGhlIGxhdGVzdCBDU1JGIHRva2VuLlxuICAgICAgICAgKiBUaGlzIG1ldGhvZCBpcyBwcm92aWRlZCB0byBhdm9pZCBjYWNoZWQgZm9ybXMgY29udGFpbmluZyBvdXRkYXRlZCBDU1JGIHRva2Vucy5cbiAgICAgICAgICovXG4gICAgICAgIHJlZnJlc2hDc3JmVG9rZW46IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciB0b2tlbiA9IHB1Yi5nZXRDc3JmVG9rZW4oKTtcbiAgICAgICAgICAgIGlmICh0b2tlbikge1xuICAgICAgICAgICAgICAgICQoJ2Zvcm0gaW5wdXRbbmFtZT1cIicgKyBwdWIuZ2V0Q3NyZlBhcmFtKCkgKyAnXCJdJykudmFsKHRva2VuKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogRGlzcGxheXMgYSBjb25maXJtYXRpb24gZGlhbG9nLlxuICAgICAgICAgKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBzaW1wbHkgZGlzcGxheXMgYSBqcyBjb25maXJtYXRpb24gZGlhbG9nLlxuICAgICAgICAgKiBZb3UgbWF5IG92ZXJyaWRlIHRoaXMgYnkgc2V0dGluZyBgeWlpLmNvbmZpcm1gLlxuICAgICAgICAgKiBAcGFyYW0gbWVzc2FnZSB0aGUgY29uZmlybWF0aW9uIG1lc3NhZ2UuXG4gICAgICAgICAqIEBwYXJhbSBvayBhIGNhbGxiYWNrIHRvIGJlIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNvbmZpcm1zIHRoZSBtZXNzYWdlXG4gICAgICAgICAqIEBwYXJhbSBjYW5jZWwgYSBjYWxsYmFjayB0byBiZSBjYWxsZWQgd2hlbiB0aGUgdXNlciBjYW5jZWxzIHRoZSBjb25maXJtYXRpb25cbiAgICAgICAgICovXG4gICAgICAgIGNvbmZpcm06IGZ1bmN0aW9uIChtZXNzYWdlLCBvaywgY2FuY2VsKSB7XG4gICAgICAgICAgICBpZiAoY29uZmlybShtZXNzYWdlKSkge1xuICAgICAgICAgICAgICAgICFvayB8fCBvaygpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAhY2FuY2VsIHx8IGNhbmNlbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBIYW5kbGVzIHRoZSBhY3Rpb24gdHJpZ2dlcmVkIGJ5IHVzZXIuXG4gICAgICAgICAqIFRoaXMgbWV0aG9kIHJlY29nbml6ZXMgdGhlIGBkYXRhLW1ldGhvZGAgYXR0cmlidXRlIG9mIHRoZSBlbGVtZW50LiBJZiB0aGUgYXR0cmlidXRlIGV4aXN0cyxcbiAgICAgICAgICogdGhlIG1ldGhvZCB3aWxsIHN1Ym1pdCB0aGUgZm9ybSBjb250YWluaW5nIHRoaXMgZWxlbWVudC4gSWYgdGhlcmUgaXMgbm8gY29udGFpbmluZyBmb3JtLCBhIGZvcm1cbiAgICAgICAgICogd2lsbCBiZSBjcmVhdGVkIGFuZCBzdWJtaXR0ZWQgdXNpbmcgdGhlIG1ldGhvZCBnaXZlbiBieSB0aGlzIGF0dHJpYnV0ZSB2YWx1ZSAoZS5nLiBcInBvc3RcIiwgXCJwdXRcIikuXG4gICAgICAgICAqIEZvciBoeXBlcmxpbmtzLCB0aGUgZm9ybSBhY3Rpb24gd2lsbCB0YWtlIHRoZSB2YWx1ZSBvZiB0aGUgXCJocmVmXCIgYXR0cmlidXRlIG9mIHRoZSBsaW5rLlxuICAgICAgICAgKiBGb3Igb3RoZXIgZWxlbWVudHMsIGVpdGhlciB0aGUgY29udGFpbmluZyBmb3JtIGFjdGlvbiBvciB0aGUgY3VycmVudCBwYWdlIFVSTCB3aWxsIGJlIHVzZWRcbiAgICAgICAgICogYXMgdGhlIGZvcm0gYWN0aW9uIFVSTC5cbiAgICAgICAgICpcbiAgICAgICAgICogSWYgdGhlIGBkYXRhLW1ldGhvZGAgYXR0cmlidXRlIGlzIG5vdCBkZWZpbmVkLCB0aGUgYGhyZWZgIGF0dHJpYnV0ZSAoaWYgYW55KSBvZiB0aGUgZWxlbWVudFxuICAgICAgICAgKiB3aWxsIGJlIGFzc2lnbmVkIHRvIGB3aW5kb3cubG9jYXRpb25gLlxuICAgICAgICAgKlxuICAgICAgICAgKiBTdGFydGluZyBmcm9tIHZlcnNpb24gMi4wLjMsIHRoZSBgZGF0YS1wYXJhbXNgIGF0dHJpYnV0ZSBpcyBhbHNvIHJlY29nbml6ZWQgd2hlbiB5b3Ugc3BlY2lmeVxuICAgICAgICAgKiBgZGF0YS1tZXRob2RgLiBUaGUgdmFsdWUgb2YgYGRhdGEtcGFyYW1zYCBzaG91bGQgYmUgYSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBkYXRhIChuYW1lLXZhbHVlIHBhaXJzKVxuICAgICAgICAgKiB0aGF0IHNob3VsZCBiZSBzdWJtaXR0ZWQgYXMgaGlkZGVuIGlucHV0cy4gRm9yIGV4YW1wbGUsIHlvdSBtYXkgdXNlIHRoZSBmb2xsb3dpbmcgY29kZSB0byBnZW5lcmF0ZVxuICAgICAgICAgKiBzdWNoIGEgbGluazpcbiAgICAgICAgICpcbiAgICAgICAgICogYGBgcGhwXG4gICAgICAgICAqIHVzZSB5aWlcXGhlbHBlcnNcXEh0bWw7XG4gICAgICAgICAqIHVzZSB5aWlcXGhlbHBlcnNcXEpzb247XG4gICAgICAgICAqXG4gICAgICAgICAqIGVjaG8gSHRtbDo6YSgnc3VibWl0JywgWydzaXRlL2Zvb2JhciddLCBbXG4gICAgICAgICAqICAgICAnZGF0YScgPT4gW1xuICAgICAgICAgKiAgICAgICAgICdtZXRob2QnID0+ICdwb3N0JyxcbiAgICAgICAgICogICAgICAgICAncGFyYW1zJyA9PiBbXG4gICAgICAgICAqICAgICAgICAgICAgICduYW1lMScgPT4gJ3ZhbHVlMScsXG4gICAgICAgICAqICAgICAgICAgICAgICduYW1lMicgPT4gJ3ZhbHVlMicsXG4gICAgICAgICAqICAgICAgICAgXSxcbiAgICAgICAgICogICAgIF0sXG4gICAgICAgICAqIF07XG4gICAgICAgICAqIGBgYFxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gJGUgdGhlIGpRdWVyeSByZXByZXNlbnRhdGlvbiBvZiB0aGUgZWxlbWVudFxuICAgICAgICAgKi9cbiAgICAgICAgaGFuZGxlQWN0aW9uOiBmdW5jdGlvbiAoJGUsIGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgbWV0aG9kID0gJGUuZGF0YSgnbWV0aG9kJyksXG4gICAgICAgICAgICAgICAgJGZvcm0gPSAkZS5jbG9zZXN0KCdmb3JtJyksXG4gICAgICAgICAgICAgICAgYWN0aW9uID0gJGUuYXR0cignaHJlZicpLFxuICAgICAgICAgICAgICAgIHBhcmFtcyA9ICRlLmRhdGEoJ3BhcmFtcycpLFxuICAgICAgICAgICAgICAgIHBqYXggPSAkZS5kYXRhKCdwamF4JyksXG4gICAgICAgICAgICAgICAgcGpheFB1c2hTdGF0ZSA9ICEhJGUuZGF0YSgncGpheC1wdXNoLXN0YXRlJyksXG4gICAgICAgICAgICAgICAgcGpheFJlcGxhY2VTdGF0ZSA9ICEhJGUuZGF0YSgncGpheC1yZXBsYWNlLXN0YXRlJyksXG4gICAgICAgICAgICAgICAgcGpheFRpbWVvdXQgPSAkZS5kYXRhKCdwamF4LXRpbWVvdXQnKSxcbiAgICAgICAgICAgICAgICBwamF4U2Nyb2xsVG8gPSAkZS5kYXRhKCdwamF4LXNjcm9sbHRvJyksXG4gICAgICAgICAgICAgICAgcGpheFB1c2hSZWRpcmVjdCA9ICRlLmRhdGEoJ3BqYXgtcHVzaC1yZWRpcmVjdCcpLFxuICAgICAgICAgICAgICAgIHBqYXhSZXBsYWNlUmVkaXJlY3QgPSAkZS5kYXRhKCdwamF4LXJlcGxhY2UtcmVkaXJlY3QnKSxcbiAgICAgICAgICAgICAgICBwamF4U2tpcE91dGVyQ29udGFpbmVycyA9ICRlLmRhdGEoJ3BqYXgtc2tpcC1vdXRlci1jb250YWluZXJzJyksXG4gICAgICAgICAgICAgICAgcGpheENvbnRhaW5lcixcbiAgICAgICAgICAgICAgICBwamF4T3B0aW9ucyA9IHt9O1xuXG4gICAgICAgICAgICBpZiAocGpheCAhPT0gdW5kZWZpbmVkICYmICQuc3VwcG9ydC5wamF4KSB7XG4gICAgICAgICAgICAgICAgaWYgKCRlLmRhdGEoJ3BqYXgtY29udGFpbmVyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgcGpheENvbnRhaW5lciA9ICRlLmRhdGEoJ3BqYXgtY29udGFpbmVyJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcGpheENvbnRhaW5lciA9ICRlLmNsb3Nlc3QoJ1tkYXRhLXBqYXgtY29udGFpbmVyPVwiXCJdJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGRlZmF1bHQgdG8gYm9keSBpZiBwamF4IGNvbnRhaW5lciBub3QgZm91bmRcbiAgICAgICAgICAgICAgICBpZiAoIXBqYXhDb250YWluZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHBqYXhDb250YWluZXIgPSAkKCdib2R5Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHBqYXhPcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBjb250YWluZXI6IHBqYXhDb250YWluZXIsXG4gICAgICAgICAgICAgICAgICAgIHB1c2g6IHBqYXhQdXNoU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgIHJlcGxhY2U6IHBqYXhSZXBsYWNlU3RhdGUsXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbFRvOiBwamF4U2Nyb2xsVG8sXG4gICAgICAgICAgICAgICAgICAgIHB1c2hSZWRpcmVjdDogcGpheFB1c2hSZWRpcmVjdCxcbiAgICAgICAgICAgICAgICAgICAgcmVwbGFjZVJlZGlyZWN0OiBwamF4UmVwbGFjZVJlZGlyZWN0LFxuICAgICAgICAgICAgICAgICAgICBwamF4U2tpcE91dGVyQ29udGFpbmVyczogcGpheFNraXBPdXRlckNvbnRhaW5lcnMsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IHBqYXhUaW1lb3V0LFxuICAgICAgICAgICAgICAgICAgICBvcmlnaW5hbEV2ZW50OiBldmVudCxcbiAgICAgICAgICAgICAgICAgICAgb3JpZ2luYWxUYXJnZXQ6ICRlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobWV0aG9kID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAnIycpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBqYXggIT09IHVuZGVmaW5lZCAmJiAkLnN1cHBvcnQucGpheCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJC5wamF4LmNsaWNrKGV2ZW50LCBwamF4T3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSBhY3Rpb247XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRlLmlzKCc6c3VibWl0JykgJiYgJGZvcm0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwamF4ICE9PSB1bmRlZmluZWQgJiYgJC5zdXBwb3J0LnBqYXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRmb3JtLm9uKCdzdWJtaXQnLGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQucGpheC5zdWJtaXQoZSwgcGpheE9wdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkZm9ybS50cmlnZ2VyKCdzdWJtaXQnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgbmV3Rm9ybSA9ICEkZm9ybS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAobmV3Rm9ybSkge1xuICAgICAgICAgICAgICAgIGlmICghYWN0aW9uIHx8ICFhY3Rpb24ubWF0Y2goLyheXFwvfDpcXC9cXC8pLykpIHtcbiAgICAgICAgICAgICAgICAgICAgYWN0aW9uID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICRmb3JtID0gJCgnPGZvcm0vPicsIHttZXRob2Q6IG1ldGhvZCwgYWN0aW9uOiBhY3Rpb259KTtcbiAgICAgICAgICAgICAgICB2YXIgdGFyZ2V0ID0gJGUuYXR0cigndGFyZ2V0Jyk7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICAkZm9ybS5hdHRyKCd0YXJnZXQnLCB0YXJnZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIW1ldGhvZC5tYXRjaCgvKGdldHxwb3N0KS9pKSkge1xuICAgICAgICAgICAgICAgICAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0Lz4nLCB7bmFtZTogJ19tZXRob2QnLCB2YWx1ZTogbWV0aG9kLCB0eXBlOiAnaGlkZGVuJ30pKTtcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kID0gJ1BPU1QnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIW1ldGhvZC5tYXRjaCgvKGdldHxoZWFkfG9wdGlvbnMpL2kpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBjc3JmUGFyYW0gPSBwdWIuZ2V0Q3NyZlBhcmFtKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjc3JmUGFyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRmb3JtLmFwcGVuZCgkKCc8aW5wdXQvPicsIHtuYW1lOiBjc3JmUGFyYW0sIHZhbHVlOiBwdWIuZ2V0Q3NyZlRva2VuKCksIHR5cGU6ICdoaWRkZW4nfSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICRmb3JtLmhpZGUoKS5hcHBlbmRUbygnYm9keScpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgYWN0aXZlRm9ybURhdGEgPSAkZm9ybS5kYXRhKCd5aWlBY3RpdmVGb3JtJyk7XG4gICAgICAgICAgICBpZiAoYWN0aXZlRm9ybURhdGEpIHtcbiAgICAgICAgICAgICAgICAvLyByZW1lbWJlciB3aG8gdHJpZ2dlcnMgdGhlIGZvcm0gc3VibWlzc2lvbi4gVGhpcyBpcyB1c2VkIGJ5IHlpaS5hY3RpdmVGb3JtLmpzXG4gICAgICAgICAgICAgICAgYWN0aXZlRm9ybURhdGEuc3VibWl0T2JqZWN0ID0gJGU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIHRlbXBvcmFyaWx5IGFkZCBoaWRkZW4gaW5wdXRzIGFjY29yZGluZyB0byBkYXRhLXBhcmFtc1xuICAgICAgICAgICAgaWYgKHBhcmFtcyAmJiAkLmlzUGxhaW5PYmplY3QocGFyYW1zKSkge1xuICAgICAgICAgICAgICAgICQuZWFjaChwYXJhbXMsIGZ1bmN0aW9uIChpZHgsIG9iaikge1xuICAgICAgICAgICAgICAgICAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0Lz4nKS5hdHRyKHtuYW1lOiBpZHgsIHZhbHVlOiBvYmosIHR5cGU6ICdoaWRkZW4nfSkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgb2xkTWV0aG9kID0gJGZvcm0uYXR0cignbWV0aG9kJyk7XG4gICAgICAgICAgICAkZm9ybS5hdHRyKCdtZXRob2QnLCBtZXRob2QpO1xuICAgICAgICAgICAgdmFyIG9sZEFjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICBpZiAoYWN0aW9uICYmIGFjdGlvbiAhPSAnIycpIHtcbiAgICAgICAgICAgICAgICBvbGRBY3Rpb24gPSAkZm9ybS5hdHRyKCdhY3Rpb24nKTtcbiAgICAgICAgICAgICAgICAkZm9ybS5hdHRyKCdhY3Rpb24nLCBhY3Rpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHBqYXggIT09IHVuZGVmaW5lZCAmJiAkLnN1cHBvcnQucGpheCkge1xuICAgICAgICAgICAgICAgICRmb3JtLm9uKCdzdWJtaXQnLGZ1bmN0aW9uKGUpe1xuICAgICAgICAgICAgICAgICAgICAkLnBqYXguc3VibWl0KGUsIHBqYXhPcHRpb25zKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgJGZvcm0udHJpZ2dlcignc3VibWl0Jyk7XG4gICAgICAgICAgICAkLndoZW4oJGZvcm0uZGF0YSgneWlpU3VibWl0RmluYWxpemVQcm9taXNlJykpLnRoZW4oXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob2xkQWN0aW9uICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICRmb3JtLmF0dHIoJ2FjdGlvbicsIG9sZEFjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJGZvcm0uYXR0cignbWV0aG9kJywgb2xkTWV0aG9kKTtcblxuICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgdGhlIHRlbXBvcmFyaWx5IGFkZGVkIGhpZGRlbiBpbnB1dHNcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmFtcyAmJiAkLmlzUGxhaW5PYmplY3QocGFyYW1zKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHBhcmFtcywgZnVuY3Rpb24gKGlkeCwgb2JqKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnaW5wdXRbbmFtZT1cIicgKyBpZHggKyAnXCJdJywgJGZvcm0pLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAobmV3Rm9ybSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgJGZvcm0ucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldFF1ZXJ5UGFyYW1zOiBmdW5jdGlvbiAodXJsKSB7XG4gICAgICAgICAgICB2YXIgcG9zID0gdXJsLmluZGV4T2YoJz8nKTtcbiAgICAgICAgICAgIGlmIChwb3MgPCAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcGFpcnMgPSB1cmwuc3Vic3RyaW5nKHBvcyArIDEpLnNwbGl0KCcmJyksXG4gICAgICAgICAgICAgICAgcGFyYW1zID0ge30sXG4gICAgICAgICAgICAgICAgcGFpcixcbiAgICAgICAgICAgICAgICBpO1xuXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBwYWlyID0gcGFpcnNbaV0uc3BsaXQoJz0nKTtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKTtcbiAgICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XG4gICAgICAgICAgICAgICAgaWYgKG5hbWUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwYXJhbXNbbmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkLmlzQXJyYXkocGFyYW1zW25hbWVdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtc1tuYW1lXSA9IFtwYXJhbXNbbmFtZV1dO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zW25hbWVdLnB1c2godmFsdWUgfHwgJycpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zW25hbWVdID0gdmFsdWUgfHwgJyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluaXRNb2R1bGU6IGZ1bmN0aW9uIChtb2R1bGUpIHtcbiAgICAgICAgICAgIGlmIChtb2R1bGUuaXNBY3RpdmUgPT09IHVuZGVmaW5lZCB8fCBtb2R1bGUuaXNBY3RpdmUpIHtcbiAgICAgICAgICAgICAgICBpZiAoJC5pc0Z1bmN0aW9uKG1vZHVsZS5pbml0KSkge1xuICAgICAgICAgICAgICAgICAgICBtb2R1bGUuaW5pdCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAkLmVhY2gobW9kdWxlLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkLmlzUGxhaW5PYmplY3QodGhpcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHB1Yi5pbml0TW9kdWxlKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaW5pdENzcmZIYW5kbGVyKCk7XG4gICAgICAgICAgICBpbml0UmVkaXJlY3RIYW5kbGVyKCk7XG4gICAgICAgICAgICBpbml0U2NyaXB0RmlsdGVyKCk7XG4gICAgICAgICAgICBpbml0RGF0YU1ldGhvZHMoKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBpbml0UmVkaXJlY3RIYW5kbGVyKCkge1xuICAgICAgICAvLyBoYW5kbGUgQUpBWCByZWRpcmVjdGlvblxuICAgICAgICAkKGRvY3VtZW50KS5hamF4Q29tcGxldGUoZnVuY3Rpb24gKGV2ZW50LCB4aHIsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICB2YXIgdXJsID0geGhyLmdldFJlc3BvbnNlSGVhZGVyKCdYLVJlZGlyZWN0Jyk7XG4gICAgICAgICAgICBpZiAodXJsKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gdXJsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbml0Q3NyZkhhbmRsZXIoKSB7XG4gICAgICAgIC8vIGF1dG9tYXRpY2FsbHkgc2VuZCBDU1JGIHRva2VuIGZvciBhbGwgQUpBWCByZXF1ZXN0c1xuICAgICAgICAkLmFqYXhQcmVmaWx0ZXIoZnVuY3Rpb24gKG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywgeGhyKSB7XG4gICAgICAgICAgICBpZiAoIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgcHViLmdldENzcmZQYXJhbSgpKSB7XG4gICAgICAgICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ1gtQ1NSRi1Ub2tlbicsIHB1Yi5nZXRDc3JmVG9rZW4oKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBwdWIucmVmcmVzaENzcmZUb2tlbigpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluaXREYXRhTWV0aG9kcygpIHtcbiAgICAgICAgdmFyIGhhbmRsZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgICAgIHZhciAkdGhpcyA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgbWV0aG9kID0gJHRoaXMuZGF0YSgnbWV0aG9kJyksXG4gICAgICAgICAgICAgICAgbWVzc2FnZSA9ICR0aGlzLmRhdGEoJ2NvbmZpcm0nKTtcblxuICAgICAgICAgICAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkICYmIG1lc3NhZ2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgJC5wcm94eShwdWIuY29uZmlybSwgdGhpcykobWVzc2FnZSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBwdWIuaGFuZGxlQWN0aW9uKCR0aGlzLCBldmVudCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHB1Yi5oYW5kbGVBY3Rpb24oJHRoaXMsIGV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGhhbmRsZSBkYXRhLWNvbmZpcm0gYW5kIGRhdGEtbWV0aG9kIGZvciBjbGlja2FibGUgYW5kIGNoYW5nZWFibGUgZWxlbWVudHNcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrLnlpaScsIHB1Yi5jbGlja2FibGVTZWxlY3RvciwgaGFuZGxlcilcbiAgICAgICAgICAgIC5vbignY2hhbmdlLnlpaScsIHB1Yi5jaGFuZ2VhYmxlU2VsZWN0b3IsIGhhbmRsZXIpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluaXRTY3JpcHRGaWx0ZXIoKSB7XG4gICAgICAgIHZhciBob3N0SW5mbyA9IGxvY2F0aW9uLnByb3RvY29sICsgJy8vJyArIGxvY2F0aW9uLmhvc3Q7XG5cbiAgICAgICAgdmFyIGxvYWRlZFNjcmlwdHMgPSAkKCdzY3JpcHRbc3JjXScpLm1hcChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zcmMuY2hhckF0KDApID09PSAnLycgPyBob3N0SW5mbyArIHRoaXMuc3JjIDogdGhpcy5zcmM7XG4gICAgICAgIH0pLnRvQXJyYXkoKTtcblxuICAgICAgICAkLmFqYXhQcmVmaWx0ZXIoJ3NjcmlwdCcsIGZ1bmN0aW9uIChvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIHhocikge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMuZGF0YVR5cGUgPT0gJ2pzb25wJykge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHVybCA9IG9wdGlvbnMudXJsLmNoYXJBdCgwKSA9PT0gJy8nID8gaG9zdEluZm8gKyBvcHRpb25zLnVybCA6IG9wdGlvbnMudXJsO1xuICAgICAgICAgICAgaWYgKCQuaW5BcnJheSh1cmwsIGxvYWRlZFNjcmlwdHMpID09PSAtMSkge1xuICAgICAgICAgICAgICAgIGxvYWRlZFNjcmlwdHMucHVzaCh1cmwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgaXNSZWxvYWRhYmxlID0gJC5pbkFycmF5KHVybCwgJC5tYXAocHViLnJlbG9hZGFibGVTY3JpcHRzLCBmdW5jdGlvbiAoc2NyaXB0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2NyaXB0LmNoYXJBdCgwKSA9PT0gJy8nID8gaG9zdEluZm8gKyBzY3JpcHQgOiBzY3JpcHQ7XG4gICAgICAgICAgICAgICAgICAgIH0pKSAhPT0gLTE7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1JlbG9hZGFibGUpIHtcbiAgICAgICAgICAgICAgICAgICAgeGhyLmFib3J0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAkKGRvY3VtZW50KS5hamF4Q29tcGxldGUoZnVuY3Rpb24gKGV2ZW50LCB4aHIsIHNldHRpbmdzKSB7XG4gICAgICAgICAgICB2YXIgc3R5bGVTaGVldHMgPSBbXTtcbiAgICAgICAgICAgICQoJ2xpbmtbcmVsPXN0eWxlc2hlZXRdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQuaW5BcnJheSh0aGlzLmhyZWYsIHB1Yi5yZWxvYWRhYmxlU2NyaXB0cykgIT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKCQuaW5BcnJheSh0aGlzLmhyZWYsIHN0eWxlU2hlZXRzKSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICBzdHlsZVNoZWV0cy5wdXNoKHRoaXMuaHJlZilcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwdWI7XG59KShqUXVlcnkpO1xuXG5qUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICB5aWkuaW5pdE1vZHVsZSh5aWkpO1xufSk7XG5cblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi4vYmFja2VuZC92ZW5kb3IveWlpc29mdC95aWkyL2Fzc2V0cy95aWkuanNcbiAqKiBtb2R1bGUgaWQgPSAyMThcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }

})